//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherCameraZoomInput;

    public static Entitas.IMatcher<InputEntity> CameraZoomInput {
        get {
            if (_matcherCameraZoomInput == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.CameraZoomInput);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherCameraZoomInput = matcher;
            }

            return _matcherCameraZoomInput;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public Code.Gameplay.Input.CameraZoomInput cameraZoomInput { get { return (Code.Gameplay.Input.CameraZoomInput)GetComponent(InputComponentsLookup.CameraZoomInput); } }
    public float CameraZoomInput { get { return cameraZoomInput.Value; } }
    public bool hasCameraZoomInput { get { return HasComponent(InputComponentsLookup.CameraZoomInput); } }

    public InputEntity AddCameraZoomInput(float newValue) {
        var index = InputComponentsLookup.CameraZoomInput;
        var component = (Code.Gameplay.Input.CameraZoomInput)CreateComponent(index, typeof(Code.Gameplay.Input.CameraZoomInput));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public InputEntity ReplaceCameraZoomInput(float newValue) {
        var index = InputComponentsLookup.CameraZoomInput;
        var component = (Code.Gameplay.Input.CameraZoomInput)CreateComponent(index, typeof(Code.Gameplay.Input.CameraZoomInput));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public InputEntity RemoveCameraZoomInput() {
        RemoveComponent(InputComponentsLookup.CameraZoomInput);
        return this;
    }
}
