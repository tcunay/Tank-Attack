//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherInstantiateParent;

    public static Entitas.IMatcher<GameEntity> InstantiateParent {
        get {
            if (_matcherInstantiateParent == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.InstantiateParent);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherInstantiateParent = matcher;
            }

            return _matcherInstantiateParent;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.Common.InstantiateParent instantiateParent { get { return (Code.Common.InstantiateParent)GetComponent(GameComponentsLookup.InstantiateParent); } }
    public UnityEngine.Transform InstantiateParent { get { return instantiateParent.Value; } }
    public bool hasInstantiateParent { get { return HasComponent(GameComponentsLookup.InstantiateParent); } }

    public GameEntity AddInstantiateParent(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.InstantiateParent;
        var component = (Code.Common.InstantiateParent)CreateComponent(index, typeof(Code.Common.InstantiateParent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceInstantiateParent(UnityEngine.Transform newValue) {
        var index = GameComponentsLookup.InstantiateParent;
        var component = (Code.Common.InstantiateParent)CreateComponent(index, typeof(Code.Common.InstantiateParent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveInstantiateParent() {
        RemoveComponent(GameComponentsLookup.InstantiateParent);
        return this;
    }
}
